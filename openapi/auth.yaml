openapi: 3.0.3
info:
  title: Ynova Gestão - Auth API
  version: 1.0.0
paths:
  /auth/csrf:
    get:
      summary: Get CSRF cookie
      responses:
        '204': { description: No content }
  /auth/login:
    post:
      summary: Login with email and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email: { type: string, format: email }
                password: { type: string }
              required: [email, password]
      responses:
        '200':
          description: Authenticated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthUser'
        '401': { description: Invalid credentials }
  /auth/me:
    get:
      summary: Get current user
      responses:
        '200':
          description: Current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthUser'
        '401': { description: Unauthenticated }
  /auth/logout:
    post:
      summary: Logout current session
      responses:
        '204': { description: Logged out }
  /auth/refresh:
    post:
      summary: Refresh access using refresh token
      responses:
        '200':
          description: New session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthUser'
  /auth/forgot-password:
    post:
      summary: Start password reset flow
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email: { type: string, format: email }
              required: [email]
      responses:
        '204': { description: Email sent when applicable }
components:
  schemas:
    AuthUser:
      type: object
      properties:
        id: { type: string }
        email: { type: string }
        name: { type: string }
        roles:
          type: array
          items: { type: string }
        permissions:
          type: array
          items: { type: string }
